---
- name: Build Java App
  gather_facts: False
  hosts: localhost
  remote_user: ubuntu
  vars:
    keypair: lesson13_key_maven
    ansible_key: /tmp/lesson13_keypair_maven.pem
    instance_type: t2.micro
    image: "ami-0767046d1677be5a0"
    security_group: lesson13-maven-securitygroup
    region: eu-central-1
  
  tasks:

  - name: Create a new ec2 key pair
    ec2_key:
      region: "{{ region }}"
      name: "{{ keypair }}"
    register: ec2_key_result

  - name: Save private key
    copy: content="{{ ec2_key_result.key.private_key }}" dest="/tmp/lesson13_keypair_maven.pem" mode=0600
    when: ec2_key_result.changed

  - name: Ensure that this security group is present
    ec2_group:
      name: "{{ security_group }}"
      description: Security Group for Lesson13
      region: "{{ region }}"
      rules:
        - proto: tcp
          ports:
          - 22
          cidr_ip: 0.0.0.0/0
          rule_desc: allow ssh access

  - name: Ensure that Maven host is present
    ec2:
      key_name: "{{ keypair }}"
      region: "{{ region }}"
      instance_type: "{{ instance_type }}"
      group: "{{ security_group }}"
      image: "{{ image }}"
      wait: true
      exact_count: 1
      count_tag:
        Name: Lesson13-Maven
      instance_tags:
        Name: Lesson13-Maven
    register: ec2

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: lesson13-maven
      ansible_ssh_private_key_file: "{{ ansible_key }}"
    loop: "{{ ec2.instances }}"

  - name: Wait for SSH to come up
    delegate_to: "{{ item.public_ip }}"
    wait_for_connection:
      delay: 30
      timeout: 30
    loop: "{{ ec2.instances }}"


---    
- name: Deploy Java App
  gather_facts: False
  hosts: localhost
  remote_user: ubuntu
  vars:
    keypair: lesson13_key_tomcat
    ansible_key: /tmp/lesson13_keypair_tomcat.pem
    instance_type: t2.micro
    image: "ami-0767046d1677be5a0"
    security_group: lesson13-tomcat-securitygroup
    region: eu-central-1
  
  tasks:

  - name: Create a new ec2 key pair
    ec2_key:
      region: "{{ region }}"
      name: "{{ keypair }}"
    register: ec2_key_result

  - name: Save private key
    copy: content="{{ ec2_key_result.key.private_key }}" dest="/tmp/lesson13_keypair_tomcat.pem" mode=0600
    when: ec2_key_result.changed

  - name: Ensure that this security group is present
    ec2_group:
      name: "{{ security_group }}"
      description: Security Group for Lesson13
      region: "{{ region }}"
      rules:
        - proto: tcp
          ports:
          - 22
          - 8080
          cidr_ip: 0.0.0.0/0
          rule_desc: allow ssh and tomcat access

  - name: Ensure that Tomcat host is present
    ec2:
      key_name: "{{ keypair }}"
      region: "{{ region }}"
      instance_type: "{{ instance_type }}"
      group: "{{ security_group }}"
      image: "{{ image }}"
      wait: true
      exact_count: 1
      count_tag:
        Name: Lesson13-Tomcat
      instance_tags:
        Name: Lesson13-Tomcat
    register: ec2
  
  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: lesson13-tomcat
      ansible_ssh_private_key_file: "{{ ansible_key }}"
    loop: "{{ ec2.instances }}"

  - name: Wait for SSH to come up
    delegate_to: "{{ item.public_ip }}"
    wait_for_connection:
      delay: 30
      timeout: 30
    loop: "{{ ec2.instances }}"

  
  
  

  

  

