---
- name: Create two EC2 nodes
  gather_facts: False
  hosts: localhost
  become_user: ubuntu
  vars:
    keypair: lesson13_keypair
    instance_type: t2.micro
    image: "ami-0767046d1677be5a0"
    security_group: lesson13_securitygroup
    region: eu-central-1
  
  tasks:

  - name: Create a new ec2 key pair
    ec2_key:
      name: lesson13_keypair

  - name: Ensure that this security group is present
    ec2_group:
      name: "{{ security_group }}"
      description: Security Group for Lesson13
      region: "{{ region }}"
      rules:
        - proto: tcp
          ports:
          - 22
          cidr_ip: 0.0.0.0/0
          rule_desc: allow ssh access

  - name: Ensure that two hosts exists
    ec2:
      key_name: "{{ keypair }}"
      region: "{{ region }}"
      instance_type: "{{ instance_type }}"
      group: "{{ security_group }}"
      image: "{{ image }}"
      wait: true
      exact_count: 2
      count_tag:
        Name: Lesson13
      instance_tags:
        Name: Lesson13
    register: ec2

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: lesson13
    loop: "{{ ec2.instances }}"

  - name: Wait for SSH to come up
    delegate_to: "{{ item.public_dns_name }}"
    wait_for_connection:
      delay: 60
      timeout: 60
    loop: "{{ ec2.instances }}"

- name: Configure instances
  hosts: lesson13
  become: True
  gather_facts: True

  tasks:

  - name: Check hostname
    shell: hostname && curl ifconfig.me
    
- name: Terminate instances
  hosts: localhost
  tasks:
    - name: Terminate that were previously launched
      ec2:
        state: 'absent'
        instance_ids: '{{ ec2.instance_ids }}'